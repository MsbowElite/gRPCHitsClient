// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/cont.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace gRPCHitsClient {

  /// <summary>Holder for reflection information generated from Protos/cont.proto</summary>
  public static partial class ContReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/cont.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ContReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFQcm90b3MvY29udC5wcm90bxIEQ29udCIeCg5Db3VudGVyUmVxdWVzdBIM",
            "CgRuYW1lGAEgASgJImAKDENvdW50ZXJSZXBseRIPCgdtZXNzYWdlGAEgASgJ",
            "EhQKDGN1cnJlbnRWYWx1ZRgCIAEoBRIQCghsb2NhbFN2YxgDIAEoCRIXCg90",
            "YXJnZXRGcmFtZXdvcmsYBCABKAkyRwoKQ291bnRlclN2YxI5Cg1HZW5lcmF0",
            "ZVZhbHVlEhQuQ29udC5Db3VudGVyUmVxdWVzdBoSLkNvbnQuQ291bnRlclJl",
            "cGx5QhGqAg5nUlBDSGl0c0NsaWVudGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCHitsClient.CounterRequest), global::gRPCHitsClient.CounterRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCHitsClient.CounterReply), global::gRPCHitsClient.CounterReply.Parser, new[]{ "Message", "CurrentValue", "LocalSvc", "TargetFramework" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CounterRequest : pb::IMessage<CounterRequest> {
    private static readonly pb::MessageParser<CounterRequest> _parser = new pb::MessageParser<CounterRequest>(() => new CounterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CounterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCHitsClient.ContReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CounterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CounterRequest(CounterRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CounterRequest Clone() {
      return new CounterRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CounterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CounterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CounterRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The response message containing the greetings.
  /// </summary>
  public sealed partial class CounterReply : pb::IMessage<CounterReply> {
    private static readonly pb::MessageParser<CounterReply> _parser = new pb::MessageParser<CounterReply>(() => new CounterReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CounterReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCHitsClient.ContReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CounterReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CounterReply(CounterReply other) : this() {
      message_ = other.message_;
      currentValue_ = other.currentValue_;
      localSvc_ = other.localSvc_;
      targetFramework_ = other.targetFramework_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CounterReply Clone() {
      return new CounterReply(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "currentValue" field.</summary>
    public const int CurrentValueFieldNumber = 2;
    private int currentValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentValue {
      get { return currentValue_; }
      set {
        currentValue_ = value;
      }
    }

    /// <summary>Field number for the "localSvc" field.</summary>
    public const int LocalSvcFieldNumber = 3;
    private string localSvc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocalSvc {
      get { return localSvc_; }
      set {
        localSvc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "targetFramework" field.</summary>
    public const int TargetFrameworkFieldNumber = 4;
    private string targetFramework_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetFramework {
      get { return targetFramework_; }
      set {
        targetFramework_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CounterReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CounterReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      if (CurrentValue != other.CurrentValue) return false;
      if (LocalSvc != other.LocalSvc) return false;
      if (TargetFramework != other.TargetFramework) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (CurrentValue != 0) hash ^= CurrentValue.GetHashCode();
      if (LocalSvc.Length != 0) hash ^= LocalSvc.GetHashCode();
      if (TargetFramework.Length != 0) hash ^= TargetFramework.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (CurrentValue != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrentValue);
      }
      if (LocalSvc.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LocalSvc);
      }
      if (TargetFramework.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TargetFramework);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (CurrentValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentValue);
      }
      if (LocalSvc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocalSvc);
      }
      if (TargetFramework.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetFramework);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CounterReply other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.CurrentValue != 0) {
        CurrentValue = other.CurrentValue;
      }
      if (other.LocalSvc.Length != 0) {
        LocalSvc = other.LocalSvc;
      }
      if (other.TargetFramework.Length != 0) {
        TargetFramework = other.TargetFramework;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
          case 16: {
            CurrentValue = input.ReadInt32();
            break;
          }
          case 26: {
            LocalSvc = input.ReadString();
            break;
          }
          case 34: {
            TargetFramework = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
